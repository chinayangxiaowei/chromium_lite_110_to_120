# Copyright 2020 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//chrome/common/features.gni")
import("//third_party/closure_compiler/compile_js.gni")
import("//tools/grit/grit_rule.gni")
import("//tools/grit/preprocess_if_expr.gni")
import("//tools/polymer/html_to_wrapper.gni")
import("//ui/webui/resources/tools/generate_grd.gni")

assert(is_chromeos_ash, "Nearby Share is CrOS only")

preprocess_src_manifest = "preprocessed_src_manifest.json"
preprocess_gen_manifest = "preprocessed_gen_manifest.json"
preprocess_folder = "preprocessed"

grit("resources") {
  defines = chrome_grit_defines

  # These arguments are needed since the grd is generated at build time.
  enable_input_discovery_for_gn_analyze = false
  source = "$target_gen_dir/nearby_share_dialog_resources.grd"
  deps = [ ":build_grd" ]
  outputs = [
    "grit/nearby_share_dialog_resources.h",
    "grit/nearby_share_dialog_resources_map.cc",
    "grit/nearby_share_dialog_resources_map.h",
    "nearby_share_dialog_resources.pak",
  ]
  output_dir = "$root_gen_dir/chrome"
}

generate_grd("build_grd") {
  grd_prefix = "nearby_share_dialog"
  out_grd = "$target_gen_dir/${grd_prefix}_resources.grd"
  deps = [
    ":preprocess_gen",
    ":preprocess_src",
    "shared:build_json_grdp",
    "shared:build_v3_grdp",
  ]
  grdp_files = [
    "$target_gen_dir/shared/nearby_share_json_resources.grdp",
    "$target_gen_dir/shared/nearby_share_resources_v3.grdp",
  ]
  manifest_files = [
    "$target_gen_dir/$preprocess_src_manifest",
    "$target_gen_dir/$preprocess_gen_manifest",
  ]
}

web_component_files = [
  "app.js",
  "nearby_confirmation_page.js",
  "nearby_discovery_page.js",
]

# Files that are passed as input to html_to_wrapper().
html_files = []
foreach(f, web_component_files) {
  html_files += [ string_replace(f, ".js", ".html") ]
}

# Files that are generated by html_to_wrapper().
html_wrapper_files = []
foreach(f, html_files) {
  html_wrapper_files += [ f + ".js" ]
}

non_web_component_files = [ "discovery_manager.js" ]

html_to_wrapper("html_wrapper_files") {
  in_files = html_files
  use_js = true
}

preprocess_if_expr("preprocess_src") {
  out_folder = "$target_gen_dir/$preprocess_folder"
  out_manifest = "$target_gen_dir/$preprocess_src_manifest"
  in_files = web_component_files + non_web_component_files +
             [ "nearby_share_dialog.html" ]
}

preprocess_if_expr("preprocess_gen") {
  deps = [ ":html_wrapper_files" ]
  in_folder = target_gen_dir
  out_folder = "$target_gen_dir/$preprocess_folder"
  out_manifest = "$target_gen_dir/$preprocess_gen_manifest"
  in_files = html_wrapper_files
}

js_type_check("closure_compile") {
  is_polymer3 = true
  closure_flags = default_closure_args + mojom_js_args + [
                    "js_module_root=" +
                        rebase_path("//chrome/browser/resources/nearby_share/",
                                    root_build_dir),
                    "js_module_root=./gen/chrome/browser/resources/nearby_share/",

                    # For typechecking nearby share Mojo WebUI bindings:
                    # - Add the Mojo WebUI binding gen directory to the module root
                    # - Replace import path prefix so the bindings can be resolved
                    "js_module_root=" + rebase_path(
                            "$root_gen_dir/mojom-webui/chrome/browser/ui/webui/nearby_share/",
                            root_build_dir),
                    "browser_resolver_prefix_replacements=\"./shared/mojo/=./\"",
                  ]
  deps = [
    ":app",
    ":discovery_manager",
    ":nearby_confirmation_page",
    ":nearby_discovery_page",
  ]
}

js_library("app") {
  deps = [
    ":nearby_confirmation_page",
    ":nearby_discovery_page",
    "//ash/webui/common/resources:load_time_data.m",
    "//chrome/browser/ui/webui/nearby_share:mojom_webui_js",
    "//third_party/polymer/v3_0/components-chromium/polymer:polymer_bundled",
  ]
  externs_list = [
    "//ui/webui/resources/cr_elements/cr_view_manager/cr_view_manager_externs.js",
    "./shared/shared_closure_types.js",
    "$externs_path/chrome_send.js",
  ]
}

js_library("discovery_manager") {
  deps = [ "//chrome/browser/ui/webui/nearby_share:mojom_webui_js" ]
}

js_library("nearby_confirmation_page") {
  deps = [
    "//ash/webui/common/resources:i18n_behavior",
    "//chrome/browser/ui/webui/nearby_share:mojom_webui_js",
    "//third_party/polymer/v3_0/components-chromium/polymer:polymer_bundled",
  ]
  externs_list = [
    "//ui/webui/resources/cr_elements/cr_button/cr_button_externs.js",
    "./shared/shared_closure_types.js",
  ]
}

js_library("nearby_discovery_page") {
  deps = [
    ":discovery_manager",
    "//ash/webui/common/resources:assert",
    "//chrome/browser/ui/webui/nearby_share:mojom_webui_js",
    "//third_party/polymer/v3_0/components-chromium/iron-list",
    "//third_party/polymer/v3_0/components-chromium/polymer:polymer_bundled",
  ]
  externs_list = [
    "//ui/webui/resources/cr_elements/cr_button/cr_button_externs.js",
    "//ui/webui/resources/cr_elements/cr_lottie/cr_lottie_externs.js",
  ]
}
